# Generated by Django 4.2.5 on 2024-04-29 02:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users_api', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('anime_api', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='video',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='users_api.creatorprofile'),
        ),
        migrations.AddField(
            model_name='video',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='text',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='users_api.creatorprofile'),
        ),
        migrations.AddField(
            model_name='text',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='story',
            name='favorited_by',
            field=models.ManyToManyField(blank=True, related_name='favorite_stories', to='users_api.userprofile'),
        ),
        migrations.AddField(
            model_name='story',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='story',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime_api.season'),
        ),
        migrations.AddField(
            model_name='story',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='anime_api.series'),
        ),
        migrations.AddField(
            model_name='story',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='series',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series_created', to='users_api.creatorprofile', verbose_name='creator'),
        ),
        migrations.AddField(
            model_name='series',
            name='favorited_by',
            field=models.ManyToManyField(blank=True, related_name='favorite_series', to='users_api.userprofile'),
        ),
        migrations.AddField(
            model_name='series',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='series_like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='series',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='season',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season', to='anime_api.series'),
        ),
        migrations.AddField(
            model_name='design',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='users_api.creatorprofile'),
        ),
        migrations.AddField(
            model_name='design',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='anime',
            name='favorited_by',
            field=models.ManyToManyField(blank=True, related_name='favorite_animes', to='users_api.userprofile'),
        ),
        migrations.AddField(
            model_name='anime',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='%(class)s_like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='anime',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime_api.season'),
        ),
        migrations.AddField(
            model_name='anime',
            name='series',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_related', to='anime_api.series'),
        ),
        migrations.AddField(
            model_name='anime',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
